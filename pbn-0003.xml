<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>240</fr:anchor><fr:addr
type="user">pbn-0003</fr:addr><fr:route>pbn-0003.xml</fr:route><fr:title
text="Canonical structures">Canonical structures</fr:title><fr:date><fr:year>2024</fr:year><fr:month>8</fr:month><fr:day>4</fr:day></fr:date><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p>Here is my attempt to explain to myself what canonical structures is and how it works.</fr:p><fr:p>Canonical structures extends the unification algorithm of Coq with a hint database.</fr:p><fr:p>Suppose that we have defined the following structure:</fr:p><![CDATA[Structure abGrp : Type := AbGrp {
    carrier : Type;
    zero : carrier;
    opp : carrier → carrier;
    add : carrier → carrier → carrier;
    add_assoc : associative add;
    add_comm : commutative add;
    zero_idl : left_id zero add;
    add_oppl : left_inverse zero opp add }.
    \end{verbatim}]]><fr:p>Here's a theorem.</fr:p><![CDATA[Lemma subr0 : forall (aG : abGrp) (x : carrier aG), add aG x (opp aG zero) = x]]><fr:p>And we can prove this.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree>